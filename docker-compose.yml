services:
  stand-frontend:
    container_name: frontend
    build:
      context: ./frontend
    restart: unless-stopped
    volumes:
      - ./frontend:/app
      - stand-frontend-node_modules:/app/node_modules
    networks:
      - web
      - internal
    ports:
      - "4200:4200"
    environment:
      CHOKIDAR_USEPOLLING: "true"
      WATCHPACK_POLLING: "true"
      NG_CLI_ANALYTICS: "false"
    logging:
      driver: json-file
      options:
        max-size: "10m"
        max-file: "3"
    command: sh -c "npm ci || npm i --legacy-peer-deps && npm run start -- --host 0.0.0.0 --port 4200 --poll=2000"
  stand-backend:
    container_name: backend
    build:
      context: ./backend
    restart: unless-stopped
    volumes:
      - ./backend:/app
    networks:
      - web
      - internal
    depends_on:
      db:
        condition: service_started
    ports:
      - "8000:8000"
    environment:
      - DATABASE_URL=postgresql+psycopg://standuser:standpass@db:5432/standdb
    logging:
      driver: json-file
      options:
        max-size: "10m"
        max-file: "3"
    command: uvicorn app.main:app --host 0.0.0.0 --port 8000 --reload
  db:
    image: postgres:17-alpine
    container_name: stand-db
    restart: unless-stopped
    environment:
      - POSTGRES_DB=standdb
      - POSTGRES_USER=standuser
      - POSTGRES_PASSWORD=standpass
    volumes:
      - stand-db-data:/var/lib/postgresql/data
    networks:
      - internal
    ports:
      - "5432:5432"
  puppeteer:
    image: ghcr.io/puppeteer/puppeteer:latest
    container_name: puppeteer
    restart: unless-stopped
    shm_size: 1g
    working_dir: /puppeteer
    networks:
      - internal
    volumes:
      - ./puppeteer:/puppeteer
    environment:
      - PUPPETEER_CACHE_DIR=/puppeteer/.cache
    command: tail -f /dev/null
networks:
  web:
    external: true
  internal:
    name: stand-internal
volumes:
  stand-db-data:
  stand-frontend-node_modules:
